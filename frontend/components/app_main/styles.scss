/**************************************************************************************************
GLOBAL STYLES
**************************************************************************************************/

$contentBackground: navy;       // used in resource link background
$textColor: white;              // used in content-block, and elements


/**************************************************************************************************
FONTS
**************************************************************************************************/


//@import '~@fortawesome/fontawesome-free/css/all.css';


/**************************************************************************************************
RESPONSIVENESS
**************************************************************************************************/

@import '~purecss/build/pure-min.css';
@import '~purecss/build/grids-responsive-min.css';

// override pure fonts
.pure-g, .pure-g [class *= "pure-u"], .pure-g [class*=pure-u] {
   font-family: inherit !important;
}


/* Responsive setters for property values */
/* Structure of $property-map: { $property-name: (default, sm, md, lg, xl) } */

@mixin responsive-setter($property-map, $limit: 5) {
    @for $i from 1 through 5 {
        @if ($i == 1 and $i <= $limit) {
            @include _responsive-setter-helper($property-map, $i);
        }
        @if ($i == 2 and $i <= $limit) {
            @include pure-sm-layout() {
                @include _responsive-setter-helper($property-map, $i);
            }
        }
        @if ($i == 3 and $i <= $limit) {
            @include pure-md-layout() {
                @include _responsive-setter-helper($property-map, $i);
            }
        }
        @if ($i == 4 and $i <= $limit) {
            @include pure-lg-layout() {
                @include _responsive-setter-helper($property-map, $i);
            }
        }
        @if ($i == 5 and $i <= $limit) {
            @include pure-xl-layout() {
                @include _responsive-setter-helper($property-map, $i);
            }
        }
    }
}

@mixin _responsive-setter-helper($property-map, $value-index) {
    @each $property-name, $property-values in $property-map {
        $value: nth($property-values, $value-index);
        @if ($value) {
            #{$property-name}: $value;
        }
    }
}


/**************************************************************************************************
BROWSER COMPATIBILITY
**************************************************************************************************/

@mixin chrome-styles() {
   @media screen and (-webkit-min-device-pixel-ratio:0) {
       @content;
   }
}

@mixin ie-styles {  /* IE10 and IE11 */
   @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
       @content;
   }
}

